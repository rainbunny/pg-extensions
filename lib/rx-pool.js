"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RxPool = void 0;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _pg = require("pg");

var _implementRxExecutor = require("./implement-rx-executor");

class RxPool extends _pg.Pool {
  constructor(config) {
    super(config);

    if (config) {
      const {
        log
      } = config;
      this.log = log;
    }

    (0, _implementRxExecutor.implementRxExecutor)(this, this.log);
  }
  /** Execute transaction.
   * Follow https://node-postgres.com/features/transactions
   */


  executeTransaction = transaction => (0, _rxjs.from)(this.connect()).pipe((0, _operators.map)(client => (0, _implementRxExecutor.implementRxExecutor)(client, this.log)), (0, _operators.switchMap)(client => (0, _rxjs.of)({}).pipe((0, _operators.switchMap)(() => (0, _rxjs.from)(client.query('BEGIN'))), (0, _operators.switchMap)(() => transaction(client)), (0, _operators.switchMap)(() => (0, _rxjs.from)(client.query('COMMIT').then(() => client.release()))), (0, _operators.catchError)(err => (0, _rxjs.from)(client.query('ROLLBACK').then(() => client.release())).pipe((0, _operators.switchMap)(() => (0, _rxjs.throwError)(err)))))), (0, _operators.map)(() => {// do nothing
  }));
}

exports.RxPool = RxPool;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yeC1wb29sLnRzIl0sIm5hbWVzIjpbIlJ4UG9vbCIsIlBnUG9vbCIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwibG9nIiwiZXhlY3V0ZVRyYW5zYWN0aW9uIiwidHJhbnNhY3Rpb24iLCJjb25uZWN0IiwicGlwZSIsImNsaWVudCIsInF1ZXJ5IiwidGhlbiIsInJlbGVhc2UiLCJlcnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFTyxNQUFNQSxNQUFOLFNBQXFCQyxRQUFyQixDQUFzRDtBQWUzREMsRUFBQUEsV0FBVyxDQUFDQyxNQUFELEVBQThCO0FBQ3ZDLFVBQU1BLE1BQU47O0FBQ0EsUUFBSUEsTUFBSixFQUFZO0FBQ1YsWUFBTTtBQUFDQyxRQUFBQTtBQUFELFVBQVFELE1BQWQ7QUFDQSxXQUFLQyxHQUFMLEdBQVdBLEdBQVg7QUFDRDs7QUFDRCxrREFBb0IsSUFBcEIsRUFBMEIsS0FBS0EsR0FBL0I7QUFDRDtBQUVEO0FBQ0Y7QUFDQTs7O0FBQ0VDLEVBQUFBLGtCQUFrQixHQUFJQyxXQUFELElBQ25CLGdCQUFLLEtBQUtDLE9BQUwsRUFBTCxFQUFxQkMsSUFBckIsQ0FDRSxvQkFBS0MsTUFBRCxJQUFrQyw4Q0FBMENBLE1BQTFDLEVBQWtELEtBQUtMLEdBQXZELENBQXRDLENBREYsRUFFRSwwQkFBV0ssTUFBRCxJQUNSLGNBQUcsRUFBSCxFQUFPRCxJQUFQLENBQ0UsMEJBQVUsTUFBTSxnQkFBS0MsTUFBTSxDQUFDQyxLQUFQLENBQWEsT0FBYixDQUFMLENBQWhCLENBREYsRUFFRSwwQkFBVSxNQUFNSixXQUFXLENBQUNHLE1BQUQsQ0FBM0IsQ0FGRixFQUdFLDBCQUFVLE1BQU0sZ0JBQUtBLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLFFBQWIsRUFBdUJDLElBQXZCLENBQTRCLE1BQU1GLE1BQU0sQ0FBQ0csT0FBUCxFQUFsQyxDQUFMLENBQWhCLENBSEYsRUFJRSwyQkFBWUMsR0FBRCxJQUNULGdCQUFLSixNQUFNLENBQUNDLEtBQVAsQ0FBYSxVQUFiLEVBQXlCQyxJQUF6QixDQUE4QixNQUFNRixNQUFNLENBQUNHLE9BQVAsRUFBcEMsQ0FBTCxFQUE0REosSUFBNUQsQ0FBaUUsMEJBQVUsTUFBTSxzQkFBV0ssR0FBWCxDQUFoQixDQUFqRSxDQURGLENBSkYsQ0FERixDQUZGLEVBWUUsb0JBQUksTUFBTSxDQUNSO0FBQ0QsR0FGRCxDQVpGLENBRGdCO0FBM0J5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB0eXBlIHtFeHRlbmRlZFBvb2xDb25maWcsIERiUXVlcnksIFJ4RXh0ZW5kZWRQb29sLCBSeEV4dGVuZGVkUG9vbENsaWVudH0gZnJvbSAnQGxpYi9pbnRlcmZhY2VzJztcblxuaW1wb3J0IHtmcm9tLCB0aHJvd0Vycm9yLCBvZn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2NhdGNoRXJyb3IsIG1hcCwgc3dpdGNoTWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge1Bvb2wgYXMgUGdQb29sfSBmcm9tICdwZyc7XG5pbXBvcnQge2ltcGxlbWVudFJ4RXhlY3V0b3J9IGZyb20gJy4vaW1wbGVtZW50LXJ4LWV4ZWN1dG9yJztcblxuZXhwb3J0IGNsYXNzIFJ4UG9vbCBleHRlbmRzIFBnUG9vbCBpbXBsZW1lbnRzIFJ4RXh0ZW5kZWRQb29sIHtcbiAgbG9nPzogRXh0ZW5kZWRQb29sQ29uZmlnWydsb2cnXTtcblxuICBleGVjdXRlUXVlcnk6IDxUPihxdWVyeTogRGJRdWVyeSkgPT4gT2JzZXJ2YWJsZTxUW10+O1xuXG4gIGNvdW50OiAocXVlcnk6IERiUXVlcnkpID0+IE9ic2VydmFibGU8bnVtYmVyPjtcblxuICBnZXRCeUlkOiAodGFibGU6IHN0cmluZykgPT4gPFJlY29yZCwgSWQ+KGlkOiBJZCwgZmllbGRzPzogc3RyaW5nW10sIGlkRmllbGQ/OiBzdHJpbmcpID0+IE9ic2VydmFibGU8UmVjb3JkPjtcblxuICBjcmVhdGU6ICh0YWJsZTogc3RyaW5nKSA9PiA8UmVjb3JkLCBJZD4ocmVjb3JkOiBQYXJ0aWFsPFJlY29yZD4pID0+IE9ic2VydmFibGU8SWQ+O1xuXG4gIHVwZGF0ZTogKHRhYmxlOiBzdHJpbmcpID0+IDxSZWNvcmQsIElkPihpZDogSWQsIHVwZGF0ZWREYXRhOiBQYXJ0aWFsPFJlY29yZD4sIGlkRmllbGQ/OiBzdHJpbmcpID0+IE9ic2VydmFibGU8dm9pZD47XG5cbiAgcmVtb3ZlOiAodGFibGU6IHN0cmluZykgPT4gPElkPihpZDogSWQsIGlkRmllbGQ/OiBzdHJpbmcpID0+IE9ic2VydmFibGU8dm9pZD47XG5cbiAgY29uc3RydWN0b3IoY29uZmlnPzogRXh0ZW5kZWRQb29sQ29uZmlnKSB7XG4gICAgc3VwZXIoY29uZmlnKTtcbiAgICBpZiAoY29uZmlnKSB7XG4gICAgICBjb25zdCB7bG9nfSA9IGNvbmZpZztcbiAgICAgIHRoaXMubG9nID0gbG9nO1xuICAgIH1cbiAgICBpbXBsZW1lbnRSeEV4ZWN1dG9yKHRoaXMsIHRoaXMubG9nKTtcbiAgfVxuXG4gIC8qKiBFeGVjdXRlIHRyYW5zYWN0aW9uLlxuICAgKiBGb2xsb3cgaHR0cHM6Ly9ub2RlLXBvc3RncmVzLmNvbS9mZWF0dXJlcy90cmFuc2FjdGlvbnNcbiAgICovXG4gIGV4ZWN1dGVUcmFuc2FjdGlvbiA9ICh0cmFuc2FjdGlvbjogKGNsaWVudDogUnhFeHRlbmRlZFBvb2xDbGllbnQpID0+IE9ic2VydmFibGU8dm9pZD4pOiBPYnNlcnZhYmxlPHZvaWQ+ID0+XG4gICAgZnJvbSh0aGlzLmNvbm5lY3QoKSkucGlwZShcbiAgICAgIG1hcCgoY2xpZW50OiBSeEV4dGVuZGVkUG9vbENsaWVudCkgPT4gaW1wbGVtZW50UnhFeGVjdXRvcjxSeEV4dGVuZGVkUG9vbENsaWVudD4oY2xpZW50LCB0aGlzLmxvZykpLFxuICAgICAgc3dpdGNoTWFwKChjbGllbnQpID0+XG4gICAgICAgIG9mKHt9KS5waXBlKFxuICAgICAgICAgIHN3aXRjaE1hcCgoKSA9PiBmcm9tKGNsaWVudC5xdWVyeSgnQkVHSU4nKSkpLFxuICAgICAgICAgIHN3aXRjaE1hcCgoKSA9PiB0cmFuc2FjdGlvbihjbGllbnQpKSxcbiAgICAgICAgICBzd2l0Y2hNYXAoKCkgPT4gZnJvbShjbGllbnQucXVlcnkoJ0NPTU1JVCcpLnRoZW4oKCkgPT4gY2xpZW50LnJlbGVhc2UoKSkpKSxcbiAgICAgICAgICBjYXRjaEVycm9yKChlcnIpID0+XG4gICAgICAgICAgICBmcm9tKGNsaWVudC5xdWVyeSgnUk9MTEJBQ0snKS50aGVuKCgpID0+IGNsaWVudC5yZWxlYXNlKCkpKS5waXBlKHN3aXRjaE1hcCgoKSA9PiB0aHJvd0Vycm9yKGVycikpKSxcbiAgICAgICAgICApLFxuICAgICAgICApLFxuICAgICAgKSxcbiAgICAgIG1hcCgoKSA9PiB7XG4gICAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICAgIH0pLFxuICAgICk7XG59XG4iXX0=